def test_status_a():
    return { 'headers': {
                                            "Test_header": "test_value"},
            "body": "success"}

def test_status_b():
    return {'status_code': 201, "headers": "Cont: Type",
            "body": "success"}

def test_status_c():
    return {'status_code': 500,
            "body": "success"}

def test_status_d(name, bu):
    return {'status_code': 503, "some": "schit", "bull": "shit", 'headers': {
                                            "Test_header": "test_value"},
            "body": "success"}

def test_headers(headers, param):
    print(headers)
    print(param)
    for k, v in headers.items():
        print(k)
        print(v)
    return 'Success'

def test_svg():
    base64_img = ''
    base64_img_bytes = base64_img.encode('utf-8')
    with open('decoded_image.svg', 'wb') as file_to_save:
        decoded_image_data = base64.decodebytes(base64_img_bytes)
        file_to_save.write(decoded_image_data)
    return {'body': decoded_image_data}

def sec_test_svg():
    base64_img = ''
    base64_img_bytes = base64_img.encode('utf-8')
    with open('decoded_image.svg', 'wb') as file_to_save:
        decoded_image_data = base64.decodebytes(base64_img_bytes)
        file_to_save.write(decoded_image_data)
    return {'body': base64_img}

def test_function():
    print('1')
    x = 2*2
    print('2')
    return {'body': """<html>
            <head></head>
                <body><p>Hello World!</p></body>
                    </html>""", "statusCode": 409}


def sec_test_function():
    print('start')
    return {'body': ''}

def clear_fun():
    return "Test complete!???!"

def list_fun():
    return ['test', 'complete']

def bad_fun():
    return 1/0


def input_invoke(param):
    print(param)
    resp = str(param)+'somesting'
    print(resp)
    return {'ok':resp}


def with_env_var():
    x = os.environ.get('VALUE')
    return int(x)*2


def ex():
    print("Start")
    raise NameError('HiThere')
